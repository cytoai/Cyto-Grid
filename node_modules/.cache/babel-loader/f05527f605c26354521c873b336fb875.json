{"ast":null,"code":"export function collisionDetection(mousePosition) {\n  // Check if any selectable item is overlaping with mouse selection box \n  var rectancle1 = reCalcWithoutPixelString(mousePosition);\n  var elements = document.getElementsByTagName('li');\n  var collisions = [];\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var rectancle2 = element.getBoundingClientRect();\n    var listId = parseInt(element.getAttribute('listId'));\n    var collisionDetected = collisionWithRectancle(rectancle1, rectancle2);\n\n    if (collisionDetected) {\n      collisions.push(listId);\n    }\n  }\n\n  return collisions;\n}\nexport function reCalc(mousePosition) {\n  // Calculate rectangle positon\n  var doc = document.documentElement;\n  var scrollOffsetY = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3 + 'px';\n  var top = y3 + scrollOffsetY + 'px';\n  var width = x4 - x3 + 'px';\n  var height = y4 - y3 + 'px';\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\nexport function reCalcWithoutPixelString(mousePosition) {\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3;\n  var top = y3;\n  var width = x4 - x3;\n  var height = y4 - y3;\n  return {\n    x: left,\n    y: top,\n    width: width,\n    height: height\n  };\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n  // Check if two rectangles overlap\n  if (rectancle1.x < rectancle2.x + rectancle2.width && rectancle1.x + rectancle1.width > rectancle2.x && rectancle1.y < rectancle2.y + rectancle2.height && rectancle1.y + rectancle1.height > rectancle2.y) {\n    return true;\n  } else return false;\n}\n\nexport function getOffsetToMouse() {\n  var dom = document.documentElement;\n  var elements = dom.getElementsByClassName(\"selected\").innerHTML;\n  console.log(elements); // Calculate distance from element to mouse position\n  // let doc = document.documentElement;\n  // const  scrollOffsetY = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0); \n  // const element = document.getElementById(\"dragPreview\" + elementId).parentElement\n  // const offsetLeft = element.offsetLeft\n  // const offsetTop = element.offsetTop\n  // const x =  mousePosition.x2 - offsetLeft - scrollOffsetY\n  // const y = mousePosition.y2 - offsetTop\n  // return {x: x, y: y} \n  // var x = (evt.pageX - $('#' + String(elementId)).offset().left) + self.frame.scrollLeft();\n  // var y = (evt.pageY - $('#' + String(elementId)).offset().top) + self.frame.scrollTop();\n}","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/my-app/src/helper.js"],"names":["collisionDetection","mousePosition","rectancle1","reCalcWithoutPixelString","elements","document","getElementsByTagName","collisions","i","length","element","rectancle2","getBoundingClientRect","listId","parseInt","getAttribute","collisionDetected","collisionWithRectancle","push","reCalc","doc","documentElement","scrollOffsetY","window","pageYOffset","scrollTop","clientTop","x3","Math","min","x1","x2","x4","max","y3","y1","y2","y4","left","top","width","height","x","y","getOffsetToMouse","dom","getElementsByClassName","innerHTML","console","log"],"mappings":"AAAA,OAAO,SAASA,kBAAT,CAA4BC,aAA5B,EAA0C;AAC7C;AACA,MAAMC,UAAU,GAAGC,wBAAwB,CAACF,aAAD,CAA3C;AACA,MAAMG,QAAQ,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,IAA9B,CAAjB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACK,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,QAAME,OAAO,GAAGN,QAAQ,CAACI,CAAD,CAAxB;AACA,QAAMG,UAAU,GAAGD,OAAO,CAACE,qBAAR,EAAnB;AACA,QAAMC,MAAM,GAAGC,QAAQ,CAACJ,OAAO,CAACK,YAAR,CAAqB,QAArB,CAAD,CAAvB;AACA,QAAMC,iBAAiB,GAAGC,sBAAsB,CAACf,UAAD,EAAaS,UAAb,CAAhD;;AACA,QAAGK,iBAAH,EAAqB;AAAET,MAAAA,UAAU,CAACW,IAAX,CAAgBL,MAAhB;AAAyB;AACnD;;AACD,SAAON,UAAP;AACH;AAED,OAAO,SAASY,MAAT,CAAgBlB,aAAhB,EAA+B;AAClC;AACA,MAAImB,GAAG,GAAGf,QAAQ,CAACgB,eAAnB;AACA,MAAIC,aAAa,GAAG,CAACC,MAAM,CAACC,WAAP,IAAsBJ,GAAG,CAACK,SAA3B,KAA0CL,GAAG,CAACM,SAAJ,IAAiB,CAA3D,CAApB;AACA,MAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS5B,aAAa,CAAC6B,EAAvB,EAA2B7B,aAAa,CAAC8B,EAAzC,CAAT,CAJkC,CAIqB;;AACvD,MAAIC,EAAE,GAAGJ,IAAI,CAACK,GAAL,CAAShC,aAAa,CAAC6B,EAAvB,EAA2B7B,aAAa,CAAC8B,EAAzC,CAAT,CALkC,CAKqB;;AACvD,MAAIG,EAAE,GAAGN,IAAI,CAACC,GAAL,CAAS5B,aAAa,CAACkC,EAAvB,EAA2BlC,aAAa,CAACmC,EAAzC,CAAT,CANkC,CAMqB;;AACvD,MAAIC,EAAE,GAAGT,IAAI,CAACK,GAAL,CAAShC,aAAa,CAACkC,EAAvB,EAA2BlC,aAAa,CAACmC,EAAzC,CAAT,CAPkC,CAOqB;;AACvD,MAAIE,IAAI,GAAGX,EAAE,GAAG,IAAhB;AACA,MAAIY,GAAG,GAAGL,EAAE,GAAGZ,aAAL,GAAqB,IAA/B;AACA,MAAIkB,KAAK,GAAGR,EAAE,GAAGL,EAAL,GAAU,IAAtB;AACA,MAAIc,MAAM,GAAGJ,EAAE,GAAGH,EAAL,GAAU,IAAvB;AACA,SAAO;AAACI,IAAAA,IAAI,EAAEA,IAAP;AAAaC,IAAAA,GAAG,EAAEA,GAAlB;AAAuBC,IAAAA,KAAK,EAAEA,KAA9B;AAAqCC,IAAAA,MAAM,EAAEA;AAA7C,GAAP;AACH;AAGD,OAAO,SAAStC,wBAAT,CAAkCF,aAAlC,EAAiD;AACpD,MAAI0B,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS5B,aAAa,CAAC6B,EAAvB,EAA2B7B,aAAa,CAAC8B,EAAzC,CAAT,CADoD,CACG;;AACvD,MAAIC,EAAE,GAAGJ,IAAI,CAACK,GAAL,CAAShC,aAAa,CAAC6B,EAAvB,EAA2B7B,aAAa,CAAC8B,EAAzC,CAAT,CAFoD,CAEG;;AACvD,MAAIG,EAAE,GAAGN,IAAI,CAACC,GAAL,CAAS5B,aAAa,CAACkC,EAAvB,EAA2BlC,aAAa,CAACmC,EAAzC,CAAT,CAHoD,CAGG;;AACvD,MAAIC,EAAE,GAAGT,IAAI,CAACK,GAAL,CAAShC,aAAa,CAACkC,EAAvB,EAA2BlC,aAAa,CAACmC,EAAzC,CAAT,CAJoD,CAIG;;AACvD,MAAIE,IAAI,GAAGX,EAAX;AACA,MAAIY,GAAG,GAAGL,EAAV;AACA,MAAIM,KAAK,GAAGR,EAAE,GAAGL,EAAjB;AACA,MAAIc,MAAM,GAAGJ,EAAE,GAAGH,EAAlB;AACA,SAAO;AAACQ,IAAAA,CAAC,EAAEJ,IAAJ;AAAUK,IAAAA,CAAC,EAAEJ,GAAb;AAAkBC,IAAAA,KAAK,EAAEA,KAAzB;AAAgCC,IAAAA,MAAM,EAAEA;AAAxC,GAAP;AACH;;AAED,SAASxB,sBAAT,CAAgCf,UAAhC,EAA4CS,UAA5C,EAAwD;AACpD;AACA,MAAIT,UAAU,CAACwC,CAAX,GAAe/B,UAAU,CAAC+B,CAAX,GAAe/B,UAAU,CAAC6B,KAAzC,IACAtC,UAAU,CAACwC,CAAX,GAAexC,UAAU,CAACsC,KAA1B,GAAkC7B,UAAU,CAAC+B,CAD7C,IAEAxC,UAAU,CAACyC,CAAX,GAAehC,UAAU,CAACgC,CAAX,GAAehC,UAAU,CAAC8B,MAFzC,IAGAvC,UAAU,CAACyC,CAAX,GAAezC,UAAU,CAACuC,MAA1B,GAAmC9B,UAAU,CAACgC,CAHlD,EAGqD;AAC7C,WAAO,IAAP;AACN,GALF,MAKQ,OAAO,KAAP;AACX;;AAED,OAAO,SAASC,gBAAT,GAA2B;AAC9B,MAAMC,GAAG,GAAGxC,QAAQ,CAACgB,eAArB;AACA,MAAIjB,QAAQ,GAAGyC,GAAG,CAACC,sBAAJ,CAA2B,UAA3B,EAAuCC,SAAtD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY7C,QAAZ,EAH8B,CAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","sourcesContent":["export function collisionDetection(mousePosition){\n    // Check if any selectable item is overlaping with mouse selection box \n    const rectancle1 = reCalcWithoutPixelString(mousePosition)\n    const elements = document.getElementsByTagName('li')\n    let collisions = []\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i]\n        const rectancle2 = element.getBoundingClientRect()\n        const listId = parseInt(element.getAttribute('listId'))\n        const collisionDetected = collisionWithRectancle(rectancle1, rectancle2)\n        if(collisionDetected){ collisions.push(listId) }\n    }\n    return collisions\n}\n\nexport function reCalc(mousePosition) { \n    // Calculate rectangle positon\n    let doc = document.documentElement;\n    let scrollOffsetY = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0); \n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3 + 'px';\n    let top = y3 + scrollOffsetY + 'px';\n    let width = x4 - x3 + 'px';\n    let height = y4 - y3 + 'px';\n    return {left: left, top: top, width: width, height: height}\n}\n\n\nexport function reCalcWithoutPixelString(mousePosition) { \n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3\n    let top = y3\n    let width = x4 - x3\n    let height = y4 - y3\n    return {x: left, y: top, width: width, height: height}\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n    // Check if two rectangles overlap\n    if (rectancle1.x < rectancle2.x + rectancle2.width &&\n        rectancle1.x + rectancle1.width > rectancle2.x &&\n        rectancle1.y < rectancle2.y + rectancle2.height &&\n        rectancle1.y + rectancle1.height > rectancle2.y) {\n            return true\n     } else return false\n}\n\nexport function getOffsetToMouse(){\n    const dom = document.documentElement;\n    let elements = dom.getElementsByClassName(\"selected\").innerHTML\n    console.log(elements)\n    // Calculate distance from element to mouse position\n    // let doc = document.documentElement;\n    // const  scrollOffsetY = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0); \n    // const element = document.getElementById(\"dragPreview\" + elementId).parentElement\n    // const offsetLeft = element.offsetLeft\n    // const offsetTop = element.offsetTop\n    // const x =  mousePosition.x2 - offsetLeft - scrollOffsetY\n    // const y = mousePosition.y2 - offsetTop\n    // return {x: x, y: y} \n    // var x = (evt.pageX - $('#' + String(elementId)).offset().left) + self.frame.scrollLeft();\n    // var y = (evt.pageY - $('#' + String(elementId)).offset().top) + self.frame.scrollTop();\n}"]},"metadata":{},"sourceType":"module"}