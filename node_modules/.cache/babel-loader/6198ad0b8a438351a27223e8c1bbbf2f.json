{"ast":null,"code":"import _classCallCheck from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/my-app/src/Item.js\";\nimport React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    return {\n      listId: props.listId,\n      selectedItems: props.selectedItems\n    };\n  },\n  endDrag: function endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    var item = monitor.getItem();\n    console.log(item);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragPreview: connect.dragPreview(),\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Item =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Item, _Component);\n\n  function Item() {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).call(this));\n    _this.state = {\n      dragPreview: null\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.connectDragPreview(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"ajajakaj\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          listId = _this$props.listId,\n          selectedItems = _this$props.selectedItems,\n          onmousedown = _this$props.onmousedown,\n          connectDragSource = _this$props.connectDragSource;\n      return connectDragSource(React.createElement(\"li\", {\n        type: \"selectableElement\",\n        listid: listId,\n        onMouseDown: function onMouseDown() {\n          return onmousedown(listId);\n        },\n        className: selectedItems.includes(listId) ? \"selected\" : \"unselected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        type: \"selectableElement\",\n        alt: \"foo\",\n        src: \"https://place-hold.it/256x256\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      console.log(props);\n    }\n  }]);\n\n  return Item;\n}(Component);\n\nexport default DragSource(\"Item\", itemSource, collect)(Item);","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/my-app/src/Item.js"],"names":["React","Component","DragSource","itemSource","beginDrag","props","listId","selectedItems","endDrag","monitor","component","didDrop","item","getItem","console","log","collect","connect","connectDragPreview","dragPreview","connectDragSource","dragSource","isDragging","Item","state","onmousedown","includes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACf,WAAO;AACLC,MAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELC,MAAAA,aAAa,EAAEF,KAAK,CAACE;AAFhB,KAAP;AAID,GANc;AAOfC,EAAAA,OAPe,mBAOPH,KAPO,EAOAI,OAPA,EAOSC,SAPT,EAOoB;AAC/B,QAAI,CAACD,OAAO,CAACE,OAAR,EAAL,EAAwB;AACtB;AACD;;AACD,QAAMC,IAAI,GAAGH,OAAO,CAACI,OAAR,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH;AAbc,CAAnB;;AAgBA,SAASI,OAAT,CAAiBC,OAAjB,EAA0BR,OAA1B,EAAmC;AAC/B,SAAO;AACHS,IAAAA,kBAAkB,EAAED,OAAO,CAACE,WAAR,EADjB;AAEHC,IAAAA,iBAAiB,EAAEH,OAAO,CAACI,UAAR,EAFhB;AAGHC,IAAAA,UAAU,EAAEb,OAAO,CAACa,UAAR;AAHT,GAAP;AAKH;;IAEKC,I;;;;;AAEF,kBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAW;AACPL,MAAAA,WAAW,EAAE;AADN,KAAX;AAFS;AAKZ;;;;wCAMmB;AACnB,WAAKd,KAAL,CAAWa,kBAAX,CAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA9B;AACA;;;6BAES;AAAA,wBAC4D,KAAKb,KADjE;AAAA,UACEC,MADF,eACEA,MADF;AAAA,UACUC,aADV,eACUA,aADV;AAAA,UACyBkB,WADzB,eACyBA,WADzB;AAAA,UACsCL,iBADtC,eACsCA,iBADtC;AAEN,aAAOA,iBAAiB,CACpB;AAAI,QAAA,IAAI,EAAE,mBAAV;AAA+B,QAAA,MAAM,EAAEd,MAAvC;AAA+C,QAAA,WAAW,EAAE;AAAA,iBAAMmB,WAAW,CAACnB,MAAD,CAAjB;AAAA,SAA5D;AAAuF,QAAA,SAAS,EAAEC,aAAa,CAACmB,QAAd,CAAuBpB,MAAvB,IAAiC,UAAjC,GAA8C,YAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,IAAI,EAAE,mBAAX;AAAgC,QAAA,GAAG,EAAC,KAApC;AAA0C,QAAA,GAAG,EAAC,+BAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADoB,CAAxB;AAKH;;;6CAf+BD,K,EAAOmB,K,EAAM;AACzCV,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH;;;;EAXcJ,S;;AA2BnB,eAAeC,UAAU,CAAC,MAAD,EAASC,UAAT,EAAqBa,OAArB,CAAV,CAAwCO,IAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { DragSource } from 'react-dnd';\n\nconst itemSource = {\n    beginDrag(props) {\n      return {\n        listId: props.listId,\n        selectedItems: props.selectedItems\n      };\n    },\n    endDrag(props, monitor, component) {\n        if (!monitor.didDrop()) {\n          return;\n        }\n        const item = monitor.getItem();\n        console.log(item)\n    }\n};\n  \nfunction collect(connect, monitor) {\n    return {\n        connectDragPreview: connect.dragPreview(),\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    };\n}\n\nclass Item extends Component {\n\n    constructor(){\n        super()\n        this.state={\n            dragPreview: null\n        }\n    }\n\n    static getDerivedStateFromProps(props, state){\n        console.log(props)\n    }\n\n    componentDidMount() {\n     this.props.connectDragPreview(<p>ajajakaj</p>);\n    }\n    \n    render () {\n        const { listId, selectedItems, onmousedown, connectDragSource } = this.props\n        return connectDragSource(\n            <li type={\"selectableElement\"} listid={listId} onMouseDown={() => onmousedown(listId)} className={selectedItems.includes(listId) ? \"selected\" : \"unselected\"}>\n                <img type={\"selectableElement\"} alt=\"foo\" src=\"https://place-hold.it/256x256\" />\n            </li>\n        )\n    }\n}\n\nexport default DragSource(\"Item\", itemSource, collect)(Item)\n"]},"metadata":{},"sourceType":"module"}