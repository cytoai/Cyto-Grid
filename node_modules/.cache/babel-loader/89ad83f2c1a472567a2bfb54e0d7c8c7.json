{"ast":null,"code":"export function collisionDetection(mousePosition) {\n  // Check if any selectable item is overlaping with mouse selection box \n  var rectancle1 = reCalcWithoutPixelString(mousePosition);\n  var elements = document.getElementsByName('selectableElement'); // Check collisions with selectable elements\n\n  var collisions = [];\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var rectancle2 = element.getBoundingClientRect();\n    var imgid = element.getAttribute('imgid');\n    var collisionDetected = collisionWithRectancle(rectancle1, rectancle2);\n\n    if (collisionDetected) {\n      collisions.push(imgid);\n    }\n  }\n\n  return collisions;\n}\nexport function reCalc(mousePosition) {\n  // Calculate rectangle positon\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3 + 'px';\n  var top = y3 + 'px';\n  var width = x4 - x3 + 'px';\n  var height = y4 - y3 + 'px';\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\nexport function reCalcWithoutPixelString(mousePosition) {\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3;\n  var top = y3;\n  var width = x4 - x3;\n  var height = y4 - y3;\n  return {\n    x: left,\n    y: top,\n    width: width,\n    height: height\n  };\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n  // Check if two rectangles overlap\n  if (rectancle1.x < rectancle2.x + rectancle2.width && rectancle1.x + rectancle1.width > rectancle2.x && rectancle1.y < rectancle2.y + rectancle2.height && rectancle1.y + rectancle1.height > rectancle2.y) {\n    return true;\n  } else return false;\n}","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/Cyto-Grid/src/helper.js"],"names":["collisionDetection","mousePosition","rectancle1","reCalcWithoutPixelString","elements","document","getElementsByName","collisions","i","length","element","rectancle2","getBoundingClientRect","imgid","getAttribute","collisionDetected","collisionWithRectancle","push","reCalc","x3","Math","min","x1","x2","x4","max","y3","y1","y2","y4","left","top","width","height","x","y"],"mappings":"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","sourcesContent":["export function collisionDetection(mousePosition){\n    // Check if any selectable item is overlaping with mouse selection box \n    const rectancle1 = reCalcWithoutPixelString(mousePosition)\n    const elements = document.getElementsByName('selectableElement') // Check collisions with selectable elements\n    let collisions = []\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i]\n        const rectancle2 = element.getBoundingClientRect()\n        const imgid = element.getAttribute('imgid')\n        const collisionDetected = collisionWithRectancle(rectancle1, rectancle2)\n        if(collisionDetected){ collisions.push(imgid) }\n    }\n    return collisions\n}\n\nexport function reCalc(mousePosition) { \n    // Calculate rectangle positon\n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3 + 'px';\n    let top = y3 + 'px';\n    let width = x4 - x3 + 'px';\n    let height = y4 - y3 + 'px';\n    return {left: left, top: top, width: width, height: height}\n}\n\n\nexport function reCalcWithoutPixelString(mousePosition) { \n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3\n    let top = y3 \n    let width = x4 - x3 \n    let height = y4 - y3\n    return {x: left, y: top, width: width, height: height}\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n    // Check if two rectangles overlap\n    if (rectancle1.x < rectancle2.x + rectancle2.width &&\n        rectancle1.x + rectancle1.width > rectancle2.x &&\n        rectancle1.y < rectancle2.y + rectancle2.height &&\n        rectancle1.y + rectancle1.height > rectancle2.y) {\n            return true\n     } else return false\n}\n"]},"metadata":{},"sourceType":"module"}