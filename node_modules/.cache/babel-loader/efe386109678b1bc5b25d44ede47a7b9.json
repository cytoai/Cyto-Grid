{"ast":null,"code":"import _objectSpread from \"/Users/cfriedri/Documents/work/Cyto-Grid/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/Cyto-Grid/src/Items.js\";\nimport React from 'react';\nimport Item from './Item';\nimport { Grid, AutoSizer } from 'react-virtualized';\n\nvar Items = function Items(props) {\n  var onmousedown = function onmousedown(listId) {\n    props.selectItem(listId);\n  };\n\n  var counter = 0;\n  var picturesPerRow = 3;\n  var quotient = Math.floor(props.images.length / picturesPerRow);\n  var remainder = props.images.length % picturesPerRow;\n  var rowCount = quotient;\n\n  if (remainder > 0) {\n    var _rowCount = _rowCount + 1;\n  } // console.log(quotient)\n\n\n  console.log(remainder);\n\n  var cellRenderer = function cellRenderer(_ref) {\n    var columnIndex = _ref.columnIndex,\n        key = _ref.key,\n        rowIndex = _ref.rowIndex,\n        style = _ref.style;\n    counter = counter + 1; // Cell renderer for virtualized list\n\n    var newStyle = _objectSpread({}, style);\n\n    return React.createElement(\"div\", {\n      key: key,\n      style: newStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Item, {\n      containerStyle: style,\n      key: key,\n      listId: key,\n      selectedItems: props.selectedItems,\n      onmousedown: onmousedown,\n      ondrag: props.ondrag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(AutoSizer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, function (_ref2) {\n    var height = _ref2.height,\n        width = _ref2.width;\n    return React.createElement(Grid, {\n      cellRenderer: cellRenderer,\n      columnCount: picturesPerRow,\n      columnWidth: width / picturesPerRow,\n      height: height\n      /* This needs to be replaced dynamically in future */\n      ,\n      rowCount: rowCount,\n      rowHeight: 300,\n      width: width\n      /* This needs to be replaced dynamically in future */\n      ,\n      style: {\n        zIndex: 1,\n        outline: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  });\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/Cyto-Grid/src/Items.js"],"names":["React","Item","Grid","AutoSizer","Items","props","onmousedown","listId","selectItem","counter","picturesPerRow","quotient","Math","floor","images","length","remainder","rowCount","console","log","cellRenderer","columnIndex","key","rowIndex","style","newStyle","selectedItems","ondrag","height","width","zIndex","outline"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5BF,IAAAA,KAAK,CAACG,UAAN,CAAiBD,MAAjB;AACH,GAFD;;AAIA,MAAIE,OAAO,GAAG,CAAd;AACA,MAAMC,cAAc,GAAG,CAAvB;AAEA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACS,MAAN,CAAaC,MAAb,GAAoBL,cAA/B,CAAjB;AACA,MAAMM,SAAS,GAAGX,KAAK,CAACS,MAAN,CAAaC,MAAb,GAAsBL,cAAxC;AAEA,MAAIO,QAAQ,GAAGN,QAAf;;AAEA,MAAIK,SAAS,GAAG,CAAhB,EAAmB;AACf,QAAIC,SAAQ,GAAGA,SAAQ,GAAG,CAA1B;AACH,GAfoB,CAgBtB;;;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAGA,MAAMI,YAAY,GAAG,SAAfA,YAAe,OAAiD;AAAA,QAArCC,WAAqC,QAArCA,WAAqC;AAAA,QAAxBC,GAAwB,QAAxBA,GAAwB;AAAA,QAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,QAATC,KAAS,QAATA,KAAS;AAElEf,IAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB,CAFkE,CAGlE;;AACA,QAAIgB,QAAQ,qBAAMD,KAAN,CAAZ;;AAEA,WACA;AAAK,MAAA,GAAG,EAAEF,GAAV;AAAe,MAAA,KAAK,EAAEG,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,cAAc,EAAED,KADpB;AAEI,MAAA,GAAG,EAAEF,GAFT;AAGI,MAAA,MAAM,EAAEA,GAHZ;AAII,MAAA,aAAa,EAAEjB,KAAK,CAACqB,aAJzB;AAKI,MAAA,WAAW,EAAEpB,WALjB;AAMI,MAAA,MAAM,EAAED,KAAK,CAACsB,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA;AAYH,GAlBD;;AAoBF,SACM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,MAAH,SAAGA,MAAH;AAAA,QAAWC,KAAX,SAAWA,KAAX;AAAA,WACG,oBAAC,IAAD;AACI,MAAA,YAAY,EAAET,YADlB;AAEI,MAAA,WAAW,EAAEV,cAFjB;AAGI,MAAA,WAAW,EAAEmB,KAAK,GAACnB,cAHvB;AAII,MAAA,MAAM,EAAEkB;AAAQ;AAJpB;AAKI,MAAA,QAAQ,EAAEX,QALd;AAMI,MAAA,SAAS,EAAE,GANf;AAOI,MAAA,KAAK,EAAEY;AAAO;AAPlB;AAQI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,CAAT;AAAYC,QAAAA,OAAO,EAAE;AAArB,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAAA,GADL,CADN;AAgBD,CAxDD;;AA0DA,eAAe3B,KAAf","sourcesContent":["import React from 'react'\nimport Item from './Item'\nimport { Grid,  AutoSizer } from 'react-virtualized';\n\n\nconst Items = (props) => {\n    const onmousedown = (listId) => {\n        props.selectItem(listId)\n    }\n\n    let counter = 0\n    const picturesPerRow = 3\n\n    const quotient = Math.floor(props.images.length/picturesPerRow);\n    const remainder = props.images.length % picturesPerRow;\n    \n    let rowCount = quotient\n\n    if( remainder > 0 ){\n        let rowCount = rowCount + 1\n    }\n   // console.log(quotient)\n    console.log(remainder)\n\n \n    const cellRenderer = function ({ columnIndex, key, rowIndex, style }) {\n        \n        counter = counter + 1\n        // Cell renderer for virtualized list\n        let newStyle ={...style}\n        \n        return (\n        <div key={key} style={newStyle}>  \n            <Item\n                containerStyle={style}\n                key={key} \n                listId={key} \n                selectedItems={props.selectedItems} \n                onmousedown={onmousedown} \n                ondrag={props.ondrag}\n            />\n        </div>\n        )  \n    }\n       \n  return (\n        <AutoSizer>\n            {({ height, width }) => (\n                <Grid\n                    cellRenderer={cellRenderer}\n                    columnCount={picturesPerRow}\n                    columnWidth={width/picturesPerRow}\n                    height={height} /* This needs to be replaced dynamically in future */\n                    rowCount={rowCount}\n                    rowHeight={300}\n                    width={width} /* This needs to be replaced dynamically in future */\n                    style={{zIndex: 1, outline: \"none\"}}\n                />\n            )}\n        </AutoSizer>\n  )\n}\n\nexport default Items\n"]},"metadata":{},"sourceType":"module"}