{"ast":null,"code":"import _classCallCheck from \"/Users/cfriedri/Documents/work/windowing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cfriedri/Documents/work/windowing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cfriedri/Documents/work/windowing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cfriedri/Documents/work/windowing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cfriedri/Documents/work/windowing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/windowing/src/DragLayer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragLayer } from 'react-dnd';\nvar layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\n\nfunction getItemStyles(props) {\n  var currentOffset = props.currentOffset;\n\n  if (!currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  var x = currentOffset.x,\n      y = currentOffset.y;\n  var transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n  return {\n    transform: transform,\n    WebkitTransform: transform\n  };\n}\n\nvar CustomDragLayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomDragLayer, _React$Component);\n\n  function CustomDragLayer() {\n    _classCallCheck(this, CustomDragLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CustomDragLayer).apply(this, arguments));\n  }\n\n  _createClass(CustomDragLayer, [{\n    key: \"renderItem\",\n    value: function renderItem(type, item) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"pkpkpk\");\n    } // static getDerivedStateFromProps(props, state){\n    //   props.setMousePosition(props.currentOffset)\n    //   return state\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          itemType = _this$props.itemType,\n          isDragging = _this$props.isDragging;\n\n      if (!isDragging) {\n        return null;\n      }\n\n      return null;\n    }\n  }]);\n\n  return CustomDragLayer;\n}(React.Component);\n\nCustomDragLayer.propTypes = {\n  item: PropTypes.object,\n  itemType: PropTypes.string,\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  isDragging: PropTypes.bool.isRequired,\n  setMousePosition: PropTypes.func\n};\n\nfunction collect(monitor) {\n  return {\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nexport default DragLayer(collect)(CustomDragLayer);","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/windowing/src/DragLayer.js"],"names":["React","PropTypes","DragLayer","layerStyles","position","pointerEvents","zIndex","left","top","width","height","getItemStyles","props","currentOffset","display","x","y","transform","WebkitTransform","CustomDragLayer","type","item","itemType","isDragging","Component","propTypes","object","string","shape","number","isRequired","bool","setMousePosition","func","collect","monitor","getItem","getItemType","getSourceClientOffset"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,OADQ;AAElBC,EAAAA,aAAa,EAAE,MAFG;AAGlBC,EAAAA,MAAM,EAAE,GAHU;AAIlBC,EAAAA,IAAI,EAAE,CAJY;AAKlBC,EAAAA,GAAG,EAAE,CALa;AAMlBC,EAAAA,KAAK,EAAE,MANW;AAOlBC,EAAAA,MAAM,EAAE;AAPU,CAApB;;AAUA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,MACpBC,aADoB,GACFD,KADE,CACpBC,aADoB;;AAE5B,MAAI,CAACA,aAAL,EAAoB;AAClB,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;;AAN2B,MAQpBC,CARoB,GAQXF,aARW,CAQpBE,CARoB;AAAA,MAQjBC,CARiB,GAQXH,aARW,CAQjBG,CARiB;AAS5B,MAAMC,SAAS,uBAAgBF,CAAhB,iBAAwBC,CAAxB,QAAf;AACA,SAAO;AACLC,IAAAA,SAAS,EAAEA,SADN;AAELC,IAAAA,eAAe,EAAED;AAFZ,GAAP;AAID;;IAEKE,e;;;;;;;;;;;;;+BACOC,I,EAAMC,I,EAAM;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,K,CAED;AACA;AACA;AAEA;;;;6BAES;AAAA,wBAC+B,KAAKT,KADpC;AAAA,UACCS,IADD,eACCA,IADD;AAAA,UACOC,QADP,eACOA,QADP;AAAA,UACiBC,UADjB,eACiBA,UADjB;;AAEP,UAAI,CAACA,UAAL,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,aACE,IADF;AAGD;;;;EApB2BvB,KAAK,CAACwB,S;;AAuBpCL,eAAe,CAACM,SAAhB,GAA4B;AAC1BJ,EAAAA,IAAI,EAAEpB,SAAS,CAACyB,MADU;AAE1BJ,EAAAA,QAAQ,EAAErB,SAAS,CAAC0B,MAFM;AAG1Bd,EAAAA,aAAa,EAAEZ,SAAS,CAAC2B,KAAV,CAAgB;AAC7Bb,IAAAA,CAAC,EAAEd,SAAS,CAAC4B,MAAV,CAAiBC,UADS;AAE7Bd,IAAAA,CAAC,EAAEf,SAAS,CAAC4B,MAAV,CAAiBC;AAFS,GAAhB,CAHW;AAO1BP,EAAAA,UAAU,EAAEtB,SAAS,CAAC8B,IAAV,CAAeD,UAPD;AAQ1BE,EAAAA,gBAAgB,EAAE/B,SAAS,CAACgC;AARF,CAA5B;;AAWA,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,SAAO;AACLd,IAAAA,IAAI,EAAEc,OAAO,CAACC,OAAR,EADD;AAELd,IAAAA,QAAQ,EAAEa,OAAO,CAACE,WAAR,EAFL;AAGLxB,IAAAA,aAAa,EAAEsB,OAAO,CAACG,qBAAR,EAHV;AAILf,IAAAA,UAAU,EAAEY,OAAO,CAACZ,UAAR;AAJP,GAAP;AAMD;;AAED,eAAerB,SAAS,CAACgC,OAAD,CAAT,CAAmBf,eAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragLayer } from 'react-dnd';\n\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\n\nfunction getItemStyles(props) {\n  const { currentOffset } = props;\n  if (!currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  const { x, y } = currentOffset;\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform: transform,\n    WebkitTransform: transform\n  };\n}\n\nclass CustomDragLayer extends React.Component {\n  renderItem(type, item) {\n    return <div>pkpkpk</div>\n  }\n\n  // static getDerivedStateFromProps(props, state){\n  //   props.setMousePosition(props.currentOffset)\n  //   return state\n\n  // }\n\n  render() {\n    const { item, itemType, isDragging} = this.props;\n    if (!isDragging) {\n      return null;\n    }\n\n    return (\n      null\n    );\n  }\n}\n\nCustomDragLayer.propTypes = {\n  item: PropTypes.object,\n  itemType: PropTypes.string,\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  isDragging: PropTypes.bool.isRequired,\n  setMousePosition: PropTypes.func\n};\n\nfunction collect(monitor) {\n  return {\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nexport default DragLayer(collect)(CustomDragLayer);"]},"metadata":{},"sourceType":"module"}