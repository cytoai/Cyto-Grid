{"ast":null,"code":"import _objectSpread from \"/Users/cfriedri/Documents/work/Cyto-Grid/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/Cyto-Grid/src/Items.js\";\nimport React from 'react';\nimport Item from './Item';\nimport { Grid, AutoSizer, ColumnSizer } from 'react-virtualized';\n\nvar Items = function Items(props) {\n  var onmousedown = function onmousedown(listId) {\n    props.selectItem(listId);\n  };\n\n  var cellRenderer = function cellRenderer(_ref) {\n    var columnIndex = _ref.columnIndex,\n        key = _ref.key,\n        rowIndex = _ref.rowIndex,\n        style = _ref.style;\n\n    // Cell renderer for virtualized list\n    var newStyle = _objectSpread({}, style, {\n      margin: \"32px\"\n    });\n\n    return React.createElement(\"div\", {\n      key: key,\n      style: newStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Item, {\n      key: key,\n      listId: key,\n      selectedItems: props.selectedItems,\n      onmousedown: onmousedown,\n      ondrag: props.ondrag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(ColumnSizer, {\n    columnMaxWidth: 100,\n    columnMinWidth: 50,\n    columnCount: numColumns,\n    width: someCalculatedWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, function (_ref2) {\n    var adjustedWidth = _ref2.adjustedWidth,\n        getColumnWidth = _ref2.getColumnWidth,\n        registerChild = _ref2.registerChild;\n    return React.createElement(Grid, {\n      cellRenderer: cellRenderer,\n      columnCount: 5,\n      columnWidth: 300,\n      height: 500\n      /* This needs to be replaced dynamically in future */\n      ,\n      rowCount: 10000,\n      rowHeight: 300,\n      width: 1500\n      /* This needs to be replaced dynamically in future */\n      ,\n      style: {\n        zIndex: 1,\n        outline: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  });\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/Cyto-Grid/src/Items.js"],"names":["React","Item","Grid","AutoSizer","ColumnSizer","Items","props","onmousedown","listId","selectItem","cellRenderer","columnIndex","key","rowIndex","style","newStyle","margin","selectedItems","ondrag","numColumns","someCalculatedWidth","adjustedWidth","getColumnWidth","registerChild","zIndex","outline"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,EAAgBC,SAAhB,EAA4BC,WAA5B,QAA8C,mBAA9C;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5BF,IAAAA,KAAK,CAACG,UAAN,CAAiBD,MAAjB;AACH,GAFD;;AAIF,MAAME,YAAY,GAAG,SAAfA,YAAe,OAAiD;AAAA,QAArCC,WAAqC,QAArCA,WAAqC;AAAA,QAAxBC,GAAwB,QAAxBA,GAAwB;AAAA,QAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,QAATC,KAAS,QAATA,KAAS;;AACpE;AACA,QAAIC,QAAQ,qBAAMD,KAAN;AAAaE,MAAAA,MAAM,EAAE;AAArB,MAAZ;;AACA,WACE;AAAK,MAAA,GAAG,EAAEJ,GAAV;AAAe,MAAA,KAAK,EAAEG,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEH,GADT;AAEI,MAAA,MAAM,EAAEA,GAFZ;AAGI,MAAA,aAAa,EAAEN,KAAK,CAACW,aAHzB;AAII,MAAA,WAAW,EAAEV,WAJjB;AAKI,MAAA,MAAM,EAAED,KAAK,CAACY,MALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAWD,GAdD;;AAgBA,SACE,oBAAC,WAAD;AACA,IAAA,cAAc,EAAE,GADhB;AAEA,IAAA,cAAc,EAAE,EAFhB;AAGA,IAAA,WAAW,EAAEC,UAHb;AAIA,IAAA,KAAK,EAAEC,mBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC;AAAA,QAAGC,aAAH,SAAGA,aAAH;AAAA,QAAkBC,cAAlB,SAAkBA,cAAlB;AAAA,QAAkCC,aAAlC,SAAkCA,aAAlC;AAAA,WACC,oBAAC,IAAD;AAEc,MAAA,YAAY,EAAEb,YAF5B;AAGc,MAAA,WAAW,EAAE,CAH3B;AAIc,MAAA,WAAW,EAAE,GAJ3B;AAKc,MAAA,MAAM,EAAE;AAAK;AAL3B;AAMc,MAAA,QAAQ,EAAE,KANxB;AAOc,MAAA,SAAS,EAAE,GAPzB;AAQc,MAAA,KAAK,EAAE;AAAM;AAR3B;AASc,MAAA,KAAK,EAAE;AAACc,QAAAA,MAAM,EAAE,CAAT;AAAYC,QAAAA,OAAO,EAAE;AAArB,OATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAAA,GAND,CADF;AAsBD,CA3CD;;AA6CA,eAAepB,KAAf","sourcesContent":["import React from 'react'\nimport Item from './Item'\nimport { Grid,  AutoSizer , ColumnSizer} from 'react-virtualized';\n\n\nconst Items = (props) => {\n    const onmousedown = (listId) => {\n        props.selectItem(listId)\n    }\n\n  const cellRenderer = function ({ columnIndex, key, rowIndex, style }) {\n    // Cell renderer for virtualized list\n    let newStyle ={...style, margin: \"32px\"}\n    return (\n      <div key={key} style={newStyle}>  \n          <Item\n              key={key} \n              listId={key} \n              selectedItems={props.selectedItems} \n              onmousedown={onmousedown} \n              ondrag={props.ondrag}\n          />\n      </div>\n    )  \n  }\n       \n  return (\n    <ColumnSizer\n    columnMaxWidth={100}\n    columnMinWidth={50}\n    columnCount={numColumns}\n    width={someCalculatedWidth}\n  >\n    {({ adjustedWidth, getColumnWidth, registerChild }) => (\n      <Grid\n               \n                    cellRenderer={cellRenderer}\n                    columnCount={5}\n                    columnWidth={300}\n                    height={500} /* This needs to be replaced dynamically in future */\n                    rowCount={10000}\n                    rowHeight={300}\n                    width={1500} /* This needs to be replaced dynamically in future */\n                    style={{zIndex: 1, outline: \"none\"}}\n                />\n                )}\n                </ColumnSizer>\n  )\n}\n\nexport default Items\n"]},"metadata":{},"sourceType":"module"}