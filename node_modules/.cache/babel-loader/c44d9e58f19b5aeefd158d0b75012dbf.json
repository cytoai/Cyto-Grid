{"ast":null,"code":"var _jsxFileName = \"/Users/cfriedri/Documents/work/windowing/src/Items.js\";\nimport React from 'react';\nimport Item from './Item';\nimport ReactDOM from 'react-dom';\nimport { Grid } from 'react-virtualized';\n\nvar Items = function Items(props) {\n  var onmousedown = function onmousedown(listId) {\n    props.selectItem(listId);\n  }; // Grid data as an array of arrays\n\n\n  var list = [['Brian Vaughn', 'Software Engineer', 'San Jose', 'CA', 95125\n  /* ... */\n  ] // And so on...\n  ];\n\n  var cellRenderer = function cellRenderer(_ref) {\n    var columnIndex = _ref.columnIndex,\n        key = _ref.key,\n        rowIndex = _ref.rowIndex,\n        style = _ref.style;\n    return React.createElement(\"div\", {\n      key: key,\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, list[rowIndex][columnIndex]);\n  }; // for(let i = 0; i < 250; i = i+1){\n  //     items.push( <Item\n  //                     key={i} \n  //                     listId={i} \n  //                     selectedItems={selectedItems} \n  //                     onmousedown={onmousedown} \n  //                     mousePosition={props.mousePosition} \n  //                     ondrag={props.ondrag}\n  //                     somethingIsDragging={props.somethingIsDragging}\n  //                 />)\n  // }\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    cellRenderer: cellRenderer,\n    columnCount: 3,\n    columnWidth: 100,\n    height: 300,\n    rowCount: list.length,\n    rowHeight: 30,\n    width: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/windowing/src/Items.js"],"names":["React","Item","ReactDOM","Grid","Items","props","onmousedown","listId","selectItem","list","cellRenderer","columnIndex","key","rowIndex","style","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5BF,IAAAA,KAAK,CAACG,UAAN,CAAiBD,MAAjB;AACH,GAFD,CADqB,CAKrB;;;AACJ,MAAME,IAAI,GAAG,CACT,CAAC,cAAD,EAAiB,mBAAjB,EAAsC,UAAtC,EAAkD,IAAlD,EAAwD;AAAM;AAA9D,GADS,CAET;AAFS,GAAb;;AAKE,MAAMC,YAAY,GAAG,SAAfA,YAAe,OAAiD;AAAA,QAArCC,WAAqC,QAArCA,WAAqC;AAAA,QAAxBC,GAAwB,QAAxBA,GAAwB;AAAA,QAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,QAATC,KAAS,QAATA,KAAS;AACpE,WACE;AACE,MAAA,GAAG,EAAEF,GADP;AAEE,MAAA,KAAK,EAAEE,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGL,IAAI,CAACI,QAAD,CAAJ,CAAeF,WAAf,CAJH,CADF;AAQD,GATD,CAXuB,CAuBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACR,IAAA,YAAY,EAAED,YADN;AAER,IAAA,WAAW,EAAE,CAFL;AAGR,IAAA,WAAW,EAAE,GAHL;AAIR,IAAA,MAAM,EAAE,GAJA;AAKR,IAAA,QAAQ,EAAED,IAAI,CAACM,MALP;AAMR,IAAA,SAAS,EAAE,EANH;AAOR,IAAA,KAAK,EAAE,GAPC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH,CA/CD;;AAiDA,eAAeX,KAAf","sourcesContent":["import React from 'react'\nimport Item from './Item'\nimport ReactDOM from 'react-dom';\nimport { Grid } from 'react-virtualized';\n\n\nconst Items = (props) => {\n    const onmousedown = (listId) => {\n        props.selectItem(listId)\n    }\n\n    // Grid data as an array of arrays\nconst list = [\n    ['Brian Vaughn', 'Software Engineer', 'San Jose', 'CA', 95125 /* ... */ ]\n    // And so on...\n  ];\n  \n  const cellRenderer = function ({ columnIndex, key, rowIndex, style }) {\n    return (\n      <div\n        key={key}\n        style={style}\n      >\n        {list[rowIndex][columnIndex]}\n      </div>\n    )  \n  }\n       \n\n    // for(let i = 0; i < 250; i = i+1){\n    //     items.push( <Item\n    //                     key={i} \n    //                     listId={i} \n    //                     selectedItems={selectedItems} \n    //                     onmousedown={onmousedown} \n    //                     mousePosition={props.mousePosition} \n    //                     ondrag={props.ondrag}\n    //                     somethingIsDragging={props.somethingIsDragging}\n    //                 />)\n    // }\n    return (\n        <React.Fragment>\n            <Grid\n    cellRenderer={cellRenderer}\n    columnCount={3}\n    columnWidth={100}\n    height={300}\n    rowCount={list.length}\n    rowHeight={30}\n    width={300}\n  />\n        </React.Fragment>\n    )\n}\n\nexport default Items\n"]},"metadata":{},"sourceType":"module"}