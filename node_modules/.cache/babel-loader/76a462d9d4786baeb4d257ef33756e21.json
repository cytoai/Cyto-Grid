{"ast":null,"code":"export function collisionDetection(mousePosition) {\n  debugger; // Check if any selectable item is overlaping with mouse selection box \n\n  var rectancle1 = reCalcWithoutPixelString(mousePosition);\n  var elements = document.getElementsByName('selectableElement');\n  console.log(elements);\n  var collisions = [];\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var rectancle2 = element.getBoundingClientRect();\n    var listId = element.getAttribute('listId');\n    var collisionDetected = collisionWithRectancle(rectancle1, rectancle2);\n\n    if (collisionDetected) {\n      collisions.push(listId);\n    }\n  }\n\n  console.log(collisions);\n  return collisions;\n}\nexport function reCalc(mousePosition) {\n  // Calculate rectangle positon\n  var doc = document.documentElement;\n  var scrollOffsetY = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  var scrollOffsetX = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3 + 'px';\n  var top = y3 + scrollOffsetY + 'px';\n  var width = x4 - x3 + scrollOffsetX + 'px';\n  var height = y4 - y3 + 'px';\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\nexport function reCalcWithoutPixelString(mousePosition) {\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3;\n  var top = y3;\n  var width = x4 - x3;\n  var height = y4 - y3;\n  return {\n    x: left,\n    y: top,\n    width: width,\n    height: height\n  };\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n  // Check if two rectangles overlap\n  if (rectancle1.x < rectancle2.x + rectancle2.width && rectancle1.x + rectancle1.width > rectancle2.x && rectancle1.y < rectancle2.y + rectancle2.height && rectancle1.y + rectancle1.height > rectancle2.y) {\n    return true;\n  } else return false;\n}\n\nexport function getOffsetToMouse(elementId, mousePosition) {\n  //Calculate distance from element to mouse position\n  var doc = document.documentElement;\n  var scrollOffsetY = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  var scrollOffsetX = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  var element = document.getElementById(\"dragPreview\" + elementId).parentElement;\n  var offsetLeft = element.offsetLeft;\n  var offsetTop = element.offsetTop;\n  var x = mousePosition.x2 - offsetLeft + scrollOffsetX;\n  var y = mousePosition.y2 - offsetTop + scrollOffsetY;\n  return {\n    x: x,\n    y: y\n  };\n}","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/windowing/src/helper.js"],"names":["collisionDetection","mousePosition","rectancle1","reCalcWithoutPixelString","elements","document","getElementsByName","console","log","collisions","i","length","element","rectancle2","getBoundingClientRect","listId","getAttribute","collisionDetected","collisionWithRectancle","push","reCalc","doc","documentElement","scrollOffsetY","window","pageYOffset","scrollTop","clientTop","scrollOffsetX","pageXOffset","scrollLeft","clientLeft","x3","Math","min","x1","x2","x4","max","y3","y1","y2","y4","left","top","width","height","x","y","getOffsetToMouse","elementId","getElementById","parentElement","offsetLeft","offsetTop"],"mappings":"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","sourcesContent":["export function collisionDetection(mousePosition){\n    debugger\n    // Check if any selectable item is overlaping with mouse selection box \n    const rectancle1 = reCalcWithoutPixelString(mousePosition)\n    const elements = document.getElementsByName('selectableElement')\n    console.log(elements)\n    let collisions = []\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i]\n        const rectancle2 = element.getBoundingClientRect()\n        const listId = element.getAttribute('listId')\n        const collisionDetected = collisionWithRectancle(rectancle1, rectancle2)\n        if(collisionDetected){ collisions.push(listId) }\n    }\n    console.log(collisions)\n    return collisions\n}\n\nexport function reCalc(mousePosition) { \n    // Calculate rectangle positon\n    let doc = document.documentElement;\n    let scrollOffsetY = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0); \n    const  scrollOffsetX = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3 + 'px';\n    let top = y3 + scrollOffsetY + 'px';\n    let width = x4 - x3 + scrollOffsetX+ 'px';\n    let height = y4 - y3 + 'px';\n    return {left: left, top: top, width: width, height: height}\n}\n\n\nexport function reCalcWithoutPixelString(mousePosition) { \n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3\n    let top = y3\n    let width = x4 - x3\n    let height = y4 - y3\n    return {x: left, y: top, width: width, height: height}\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n    // Check if two rectangles overlap\n    if (rectancle1.x < rectancle2.x + rectancle2.width &&\n        rectancle1.x + rectancle1.width > rectancle2.x &&\n        rectancle1.y < rectancle2.y + rectancle2.height &&\n        rectancle1.y + rectancle1.height > rectancle2.y) {\n            return true\n     } else return false\n}\n\nexport function getOffsetToMouse(elementId, mousePosition){\n    //Calculate distance from element to mouse position\n    let doc = document.documentElement;\n    const  scrollOffsetY = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0); \n    const  scrollOffsetX = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    const element = document.getElementById(\"dragPreview\" + elementId).parentElement\n    const offsetLeft = element.offsetLeft\n    const offsetTop = element.offsetTop\n    const x =  mousePosition.x2 - offsetLeft + scrollOffsetX\n    const y = mousePosition.y2 - offsetTop + scrollOffsetY\n    return {x: x, y: y} \n}"]},"metadata":{},"sourceType":"module"}