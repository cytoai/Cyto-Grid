{"ast":null,"code":"import _classCallCheck from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/my-app/src/CustomDragPreview.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemTypes from './ItemTypes';\nimport BoxDragPreview from './BoxDragPreview';\nimport snapToGrid from './snapToGrid';\nimport { DragLayer } from 'react-dnd';\nvar layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\n\nfunction getItemStyles(props) {\n  var currentOffset = props.currentOffset;\n\n  if (!currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  var x = currentOffset.x,\n      y = currentOffset.y;\n  var transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n  return {\n    transform: transform,\n    WebkitTransform: transform\n  };\n}\n\nvar CustomDragLayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomDragLayer, _React$Component);\n\n  function CustomDragLayer() {\n    _classCallCheck(this, CustomDragLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CustomDragLayer).apply(this, arguments));\n  }\n\n  _createClass(CustomDragLayer, [{\n    key: \"renderItem\",\n    value: function renderItem(type, item) {\n      switch (type) {\n        case ItemTypes.BOX:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          itemType = _this$props.itemType,\n          isDragging = _this$props.isDragging;\n\n      if (!isDragging) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: layerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getItemStyles(this.props),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.renderItem(itemType, item)));\n    }\n  }]);\n\n  return CustomDragLayer;\n}(React.Component);\n\nCustomDragLayer.propTypes = {\n  item: PropTypes.object,\n  itemType: PropTypes.string,\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  isDragging: PropTypes.bool.isRequired\n};\n\nfunction collect(monitor) {\n  return {\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nexport default DragLayer(collect)(CustomDragLayer);","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/my-app/src/CustomDragPreview.js"],"names":["React","PropTypes","ItemTypes","BoxDragPreview","snapToGrid","DragLayer","layerStyles","position","pointerEvents","zIndex","left","top","width","height","getItemStyles","props","currentOffset","display","x","y","transform","WebkitTransform","CustomDragLayer","type","item","BOX","itemType","isDragging","renderItem","Component","propTypes","object","string","shape","number","isRequired","bool","collect","monitor","getItem","getItemType","getSourceClientOffset"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,OADQ;AAElBC,EAAAA,aAAa,EAAE,MAFG;AAGlBC,EAAAA,MAAM,EAAE,GAHU;AAIlBC,EAAAA,IAAI,EAAE,CAJY;AAKlBC,EAAAA,GAAG,EAAE,CALa;AAMlBC,EAAAA,KAAK,EAAE,MANW;AAOlBC,EAAAA,MAAM,EAAE;AAPU,CAApB;;AAUA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,MACpBC,aADoB,GACFD,KADE,CACpBC,aADoB;;AAE5B,MAAI,CAACA,aAAL,EAAoB;AAClB,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;;AAN2B,MAQpBC,CARoB,GAQXF,aARW,CAQpBE,CARoB;AAAA,MAQjBC,CARiB,GAQXH,aARW,CAQjBG,CARiB;AAS5B,MAAMC,SAAS,uBAAgBF,CAAhB,iBAAwBC,CAAxB,QAAf;AACA,SAAO;AACLC,IAAAA,SAAS,EAAEA,SADN;AAELC,IAAAA,eAAe,EAAED;AAFZ,GAAP;AAID;;IAEKE,e;;;;;;;;;;;;;+BACOC,I,EAAMC,I,EAAM;AACrB,cAAQD,IAAR;AACA,aAAKrB,SAAS,CAACuB,GAAf;AACE,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAFF;AAMD;;;6BAEQ;AAAA,wBACgC,KAAKV,KADrC;AAAA,UACCS,IADD,eACCA,IADD;AAAA,UACOE,QADP,eACOA,QADP;AAAA,UACiBC,UADjB,eACiBA,UADjB;;AAEP,UAAI,CAACA,UAAL,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,aACE;AAAK,QAAA,KAAK,EAAErB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAEQ,aAAa,CAAC,KAAKC,KAAN,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKa,UAAL,CAAgBF,QAAhB,EAA0BF,IAA1B,CADH,CADF,CADF;AAOD;;;;EAvB2BxB,KAAK,CAAC6B,S;;AA0BpCP,eAAe,CAACQ,SAAhB,GAA4B;AAC1BN,EAAAA,IAAI,EAAEvB,SAAS,CAAC8B,MADU;AAE1BL,EAAAA,QAAQ,EAAEzB,SAAS,CAAC+B,MAFM;AAG1BhB,EAAAA,aAAa,EAAEf,SAAS,CAACgC,KAAV,CAAgB;AAC7Bf,IAAAA,CAAC,EAAEjB,SAAS,CAACiC,MAAV,CAAiBC,UADS;AAE7BhB,IAAAA,CAAC,EAAElB,SAAS,CAACiC,MAAV,CAAiBC;AAFS,GAAhB,CAHW;AAO1BR,EAAAA,UAAU,EAAE1B,SAAS,CAACmC,IAAV,CAAeD;AAPD,CAA5B;;AAUA,SAASE,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,SAAO;AACLd,IAAAA,IAAI,EAAEc,OAAO,CAACC,OAAR,EADD;AAELb,IAAAA,QAAQ,EAAEY,OAAO,CAACE,WAAR,EAFL;AAGLxB,IAAAA,aAAa,EAAEsB,OAAO,CAACG,qBAAR,EAHV;AAILd,IAAAA,UAAU,EAAEW,OAAO,CAACX,UAAR;AAJP,GAAP;AAMD;;AAED,eAAetB,SAAS,CAACgC,OAAD,CAAT,CAAmBf,eAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemTypes from './ItemTypes';\nimport BoxDragPreview from './BoxDragPreview';\nimport snapToGrid from './snapToGrid';\nimport { DragLayer } from 'react-dnd';\n\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\n\nfunction getItemStyles(props) {\n  const { currentOffset } = props;\n  if (!currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  const { x, y } = currentOffset;\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform: transform,\n    WebkitTransform: transform\n  };\n}\n\nclass CustomDragLayer extends React.Component {\n  renderItem(type, item) {\n    switch (type) {\n    case ItemTypes.BOX:\n      return (\n        <div/>\n      );\n    }\n  }\n\n  render() {\n    const { item, itemType, isDragging } = this.props;\n    if (!isDragging) {\n      return null;\n    }\n\n    return (\n      <div style={layerStyles}>\n        <div style={getItemStyles(this.props)}>\n          {this.renderItem(itemType, item)}\n        </div>\n      </div>\n    );\n  }\n}\n\nCustomDragLayer.propTypes = {\n  item: PropTypes.object,\n  itemType: PropTypes.string,\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  isDragging: PropTypes.bool.isRequired\n};\n\nfunction collect(monitor) {\n  return {\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nexport default DragLayer(collect)(CustomDragLayer);"]},"metadata":{},"sourceType":"module"}