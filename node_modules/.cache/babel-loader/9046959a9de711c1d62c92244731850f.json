{"ast":null,"code":"import _objectSpread from \"/Users/cfriedri/Documents/work/windowing/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/windowing/src/Items.js\";\nimport React from 'react';\nimport Item from './Item';\nimport ReactDOM from 'react-dom';\nimport { CellMeasurer, CellMeasurerCache, createMasonryCellPositioner, Masonry } from 'react-virtualized'; // Array of images with captions\n\nvar list = []; // Default sizes help Masonry decide how many images to batch-measure\n\nvar cache = new CellMeasurerCache({\n  defaultHeight: 250,\n  defaultWidth: 200,\n  fixedWidth: true\n}); // Our masonry layout will use 3 columns with a 10px gutter between\n\nvar cellPositioner = createMasonryCellPositioner({\n  cellMeasurerCache: cache,\n  columnCount: 3,\n  columnWidth: 200,\n  spacer: 10\n});\n\nvar Items = function Items(props) {\n  var onmousedown = function onmousedown(listId) {\n    props.selectItem(listId);\n  }; // Grid data as an array of arrays\n\n\n  var list = [['Brian Vaughn', 'Software Engineer', 'San Jose', 'CA', 95125\n  /* ... */\n  ] // And so on...\n  ];\n\n  var cellRendererXXX = function cellRendererXXX(_ref) {\n    var columnIndex = _ref.columnIndex,\n        key = _ref.key,\n        rowIndex = _ref.rowIndex,\n        style = _ref.style;\n\n    var newStyle = _objectSpread({}, style, {\n      margin: \"0 0 0 8px\"\n    });\n\n    return React.createElement(\"div\", {\n      key: key,\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: \"0 0 0 8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"foo\",\n      src: \"https://place-hold.it/256x256\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  };\n\n  function cellRenderer(_ref2) {\n    var index = _ref2.index,\n        key = _ref2.key,\n        parent = _ref2.parent,\n        style = _ref2.style;\n    var datum = list[index];\n    return React.createElement(CellMeasurer, {\n      cache: cache,\n      index: index,\n      key: key,\n      parent: parent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://place-hold.it/256x256\",\n      style: {\n        height: datum.imageHeight,\n        width: datum.imageWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, datum.caption)));\n  } // for(let i = 0; i < 250; i = i+1){\n  //     items.push( <Item\n  //                     key={i} \n  //                     listId={i} \n  //                     selectedItems={selectedItems} \n  //                     onmousedown={onmousedown} \n  //                     mousePosition={props.mousePosition} \n  //                     ondrag={props.ondrag}\n  //                     somethingIsDragging={props.somethingIsDragging}\n  //                 />)\n  // }\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Masonry, {\n    cellCount: list.length,\n    cellMeasurerCache: cache,\n    cellPositioner: cellPositioner,\n    cellRenderer: cellRenderer,\n    height: 600,\n    width: 800,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), \",\");\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/windowing/src/Items.js"],"names":["React","Item","ReactDOM","CellMeasurer","CellMeasurerCache","createMasonryCellPositioner","Masonry","list","cache","defaultHeight","defaultWidth","fixedWidth","cellPositioner","cellMeasurerCache","columnCount","columnWidth","spacer","Items","props","onmousedown","listId","selectItem","cellRendererXXX","columnIndex","key","rowIndex","style","newStyle","margin","cellRenderer","index","parent","datum","height","imageHeight","width","imageWidth","caption","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Item from './Item'\nimport ReactDOM from 'react-dom';\nimport {\n  CellMeasurer,\n  CellMeasurerCache,\n  createMasonryCellPositioner,\n  Masonry\n} from 'react-virtualized';\n\n// Array of images with captions\nconst list = [];\n\n// Default sizes help Masonry decide how many images to batch-measure\nconst cache = new CellMeasurerCache({\n  defaultHeight: 250,\n  defaultWidth: 200,\n  fixedWidth: true\n})\n\n// Our masonry layout will use 3 columns with a 10px gutter between\nconst cellPositioner = createMasonryCellPositioner({\n  cellMeasurerCache: cache,\n  columnCount: 3,\n  columnWidth: 200,\n  spacer: 10\n})\n\nconst Items = (props) => {\n    const onmousedown = (listId) => {\n        props.selectItem(listId)\n    }\n\n    // Grid data as an array of arrays\nconst list = [\n    ['Brian Vaughn', 'Software Engineer', 'San Jose', 'CA', 95125 /* ... */ ]\n    // And so on...\n  ];\n  \n  const cellRendererXXX = function ({ columnIndex, key, rowIndex, style }) {\n    \n    let newStyle = {...style, margin: \"0 0 0 8px\"}\n  \n    return (\n      <div\n        key={key}\n        style={style}\n\n      >\n      <div style={{margin:\"0 0 0 8px\"}}>\n      <img alt=\"foo\" src=\"https://place-hold.it/256x256\"/>\n\n      </div>\n\n      </div>\n    )  \n  }\n  function cellRenderer ({ index, key, parent, style }) {\n    const datum = list[index]\n  \n    return (\n      <CellMeasurer\n        cache={cache}\n        index={index}\n        key={key}\n        parent={parent}\n      >\n        <div style={style}>\n          <img\n            src=\"https://place-hold.it/256x256\"\n            style={{\n              height: datum.imageHeight,\n              width: datum.imageWidth\n            }}\n          />\n          <h4>{datum.caption}</h4>\n        </div>\n      </CellMeasurer>\n    )\n  }\n       \n\n    // for(let i = 0; i < 250; i = i+1){\n    //     items.push( <Item\n    //                     key={i} \n    //                     listId={i} \n    //                     selectedItems={selectedItems} \n    //                     onmousedown={onmousedown} \n    //                     mousePosition={props.mousePosition} \n    //                     ondrag={props.ondrag}\n    //                     somethingIsDragging={props.somethingIsDragging}\n    //                 />)\n    // }\n    return (\n        <React.Fragment>\n          <Masonry\n    cellCount={list.length}\n    cellMeasurerCache={cache}\n    cellPositioner={cellPositioner}\n    cellRenderer={cellRenderer}\n    height={600}\n    width={800}\n  />,\n        </React.Fragment>\n    )\n}\n\nexport default Items\n"]},"metadata":{},"sourceType":"module"}