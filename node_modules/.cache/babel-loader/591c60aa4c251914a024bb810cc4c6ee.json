{"ast":null,"code":"export function reCalc(mousePosition) {\n  //This will restyle the div\n  var doc = document.documentElement;\n  var scrollOffsetY = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3 + 'px';\n  var top = y3 + scrollOffsetY + 'px';\n  var width = x4 - x3 + 'px';\n  var height = y4 - y3 + 'px';\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\nexport function reCalcWithoutPixelString(mousePosition) {\n  //This will restyle the div\n  var x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n\n  var x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n\n  var y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n\n  var y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n\n  var left = x3;\n  var top = y3;\n  var width = x4 - x3;\n  var height = y4 - y3;\n  return {\n    x: left,\n    y: top,\n    width: width,\n    height: height\n  };\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n  if (rectancle1.x < rectancle2.x + rectancle2.width && rectancle1.x + rectancle1.width > rectancle2.x && rectancle1.y < rectancle2.y + rectancle2.height && rectancle1.y + rectancle1.height > rectancle2.y) {\n    return true;\n  } else return false;\n}\n\nexport function collisionDetection(mousePosition) {\n  var rectancle1 = reCalcWithoutPixelString(mousePosition);\n  var elements = document.getElementsByTagName('li');\n  var collisions = [];\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var rectancle2 = element.getBoundingClientRect();\n    var listId = parseInt(element.getAttribute('listId'));\n    var collisionDetected = collisionWithRectancle(rectancle1, rectancle2);\n\n    if (collisionDetected) {\n      collisions.push(listId);\n    }\n  }\n\n  return collisions;\n}\nexport function getOffsetToMouse(elementId) {\n  var x = evt.pageX - $('#' + String(elementId)).offset().left + self.frame.scrollLeft();\n  var y = evt.pageY - $('#' + String(elementId)).offset().top + self.frame.scrollTop();\n}","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/my-app/src/helper.js"],"names":["reCalc","mousePosition","doc","document","documentElement","scrollOffsetY","window","pageYOffset","scrollTop","clientTop","x3","Math","min","x1","x2","x4","max","y3","y1","y2","y4","left","top","width","height","reCalcWithoutPixelString","x","y","collisionWithRectancle","rectancle1","rectancle2","collisionDetection","elements","getElementsByTagName","collisions","i","length","element","getBoundingClientRect","listId","parseInt","getAttribute","collisionDetected","push","getOffsetToMouse","elementId","evt","pageX","$","String","offset","self","frame","scrollLeft","pageY"],"mappings":"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","sourcesContent":["export function reCalc(mousePosition) { \n    //This will restyle the div\n    let doc = document.documentElement;\n    let scrollOffsetY = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0); \n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3 + 'px';\n    let top = y3 + scrollOffsetY + 'px';\n    let width = x4 - x3 + 'px';\n    let height = y4 - y3 + 'px';\n    return {left: left, top: top, width: width, height: height}\n}\n\n\nexport function reCalcWithoutPixelString(mousePosition) { \n    //This will restyle the div\n    let x3 = Math.min(mousePosition.x1, mousePosition.x2); //Smaller X\n    let x4 = Math.max(mousePosition.x1, mousePosition.x2); //Larger X\n    let y3 = Math.min(mousePosition.y1, mousePosition.y2); //Smaller Y\n    let y4 = Math.max(mousePosition.y1, mousePosition.y2); //Larger Y\n    let left = x3\n    let top = y3\n    let width = x4 - x3\n    let height = y4 - y3\n    return {x: left, y: top, width: width, height: height}\n}\n\nfunction collisionWithRectancle(rectancle1, rectancle2) {\n    if (rectancle1.x < rectancle2.x + rectancle2.width &&\n        rectancle1.x + rectancle1.width > rectancle2.x &&\n        rectancle1.y < rectancle2.y + rectancle2.height &&\n        rectancle1.y + rectancle1.height > rectancle2.y) {\n            return true\n     } else return false\n}\n\nexport function collisionDetection(mousePosition){\n    const rectancle1 = reCalcWithoutPixelString(mousePosition)\n    const elements = document.getElementsByTagName('li')\n    let collisions = []\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i]\n        const rectancle2 = element.getBoundingClientRect()\n        const listId = parseInt(element.getAttribute('listId'))\n        const collisionDetected = collisionWithRectancle(rectancle1, rectancle2)\n        if(collisionDetected){ collisions.push(listId) }\n    }\n    return collisions\n}\n\nexport function getOffsetToMouse(elementId){\n    var x = (evt.pageX - $('#' + String(elementId)).offset().left) + self.frame.scrollLeft();\n    var y = (evt.pageY - $('#' + String(elementId)).offset().top) + self.frame.scrollTop();\n}"]},"metadata":{},"sourceType":"module"}