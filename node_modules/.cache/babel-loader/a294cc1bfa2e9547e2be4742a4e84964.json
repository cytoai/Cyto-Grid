{"ast":null,"code":"import _classCallCheck from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/my-app/src/CardDragLayer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragLayer } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nvar layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0\n};\n\nvar getItemStyles = function getItemStyles(currentOffset) {\n  if (!currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  var x = currentOffset.x,\n      y = currentOffset.y;\n  return {\n    transform: \"translate(\".concat(x, \"px, \").concat(y, \"px)\"),\n    filter: 'drop-shadow(0 2px 12px rgba(0,0,0,0.45))'\n  };\n};\n\nvar collect = function collect(monitor) {\n  return {\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  };\n};\n\nvar CardDragLayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardDragLayer, _React$Component);\n\n  function CardDragLayer() {\n    _classCallCheck(this, CardDragLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardDragLayer).apply(this, arguments));\n  }\n\n  _createClass(CardDragLayer, [{\n    key: \"renderItem\",\n    value: function renderItem(type, item) {\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          itemType = _this$props.itemType,\n          currentOffset = _this$props.currentOffset,\n          isDragging = _this$props.isDragging;\n\n      if (!isDragging) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: layerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getItemStyles(currentOffset),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.renderItem(itemType, item)));\n    }\n  }]);\n\n  return CardDragLayer;\n}(React.Component);\n\nCardDragLayer.propTypes = {\n  item: PropTypes.object,\n  itemType: PropTypes.string,\n  initialOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  isDragging: PropTypes.bool.isRequired\n};\nexport default DragLayer(collect)(CardDragLayer);","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/my-app/src/CardDragLayer.js"],"names":["React","PropTypes","DragLayer","ItemTypes","layerStyles","position","pointerEvents","zIndex","left","top","right","bottom","getItemStyles","currentOffset","display","x","y","transform","filter","collect","monitor","item","getItem","itemType","getItemType","getSourceClientOffset","isDragging","CardDragLayer","type","props","renderItem","Component","propTypes","object","string","initialOffset","shape","number","isRequired","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,OADQ;AAElBC,EAAAA,aAAa,EAAE,MAFG;AAGlBC,EAAAA,MAAM,EAAE,GAHU;AAIlBC,EAAAA,IAAI,EAAE,CAJY;AAKlBC,EAAAA,GAAG,EAAE,CALa;AAMlBC,EAAAA,KAAK,EAAE,CANW;AAOlBC,EAAAA,MAAM,EAAE;AAPU,CAApB;;AAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,aAAa,EAAI;AACrC,MAAI,CAACA,aAAL,EAAoB;AAClB,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;;AALoC,MAM7BC,CAN6B,GAMpBF,aANoB,CAM7BE,CAN6B;AAAA,MAM1BC,CAN0B,GAMpBH,aANoB,CAM1BG,CAN0B;AAOrC,SAAO;AACLC,IAAAA,SAAS,sBAAeF,CAAf,iBAAuBC,CAAvB,QADJ;AAELE,IAAAA,MAAM,EAAE;AAFH,GAAP;AAID,CAXD;;AAaA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,OAAO;AAAA,SAAK;AAC1BC,IAAAA,IAAI,EAAED,OAAO,CAACE,OAAR,EADoB;AAE1BC,IAAAA,QAAQ,EAAEH,OAAO,CAACI,WAAR,EAFgB;AAG1BX,IAAAA,aAAa,EAAEO,OAAO,CAACK,qBAAR,EAHW;AAI1BC,IAAAA,UAAU,EAAEN,OAAO,CAACM,UAAR;AAJc,GAAL;AAAA,CAAvB;;IAOMC,a;;;;;;;;;;;;;+BACOC,I,EAAMP,I,EAAM;AACrB,aAAO,IAAP;AACD;;;6BAEQ;AAAA,wBAC+C,KAAKQ,KADpD;AAAA,UACCR,IADD,eACCA,IADD;AAAA,UACOE,QADP,eACOA,QADP;AAAA,UACiBV,aADjB,eACiBA,aADjB;AAAA,UACgCa,UADhC,eACgCA,UADhC;;AAGP,UAAI,CAACA,UAAL,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,aACE;AAAK,QAAA,KAAK,EAAEtB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAEQ,aAAa,CAACC,aAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2C,KAAKiB,UAAL,CAAgBP,QAAhB,EAA0BF,IAA1B,CAA3C,CADF,CADF;AAKD;;;;EAjByBrB,KAAK,CAAC+B,S;;AAoBlCJ,aAAa,CAACK,SAAd,GAA0B;AACxBX,EAAAA,IAAI,EAAEpB,SAAS,CAACgC,MADQ;AAExBV,EAAAA,QAAQ,EAAEtB,SAAS,CAACiC,MAFI;AAGxBC,EAAAA,aAAa,EAAElC,SAAS,CAACmC,KAAV,CAAgB;AAC7BrB,IAAAA,CAAC,EAAEd,SAAS,CAACoC,MAAV,CAAiBC,UADS;AAE7BtB,IAAAA,CAAC,EAAEf,SAAS,CAACoC,MAAV,CAAiBC;AAFS,GAAhB,CAHS;AAOxBzB,EAAAA,aAAa,EAAEZ,SAAS,CAACmC,KAAV,CAAgB;AAC7BrB,IAAAA,CAAC,EAAEd,SAAS,CAACoC,MAAV,CAAiBC,UADS;AAE7BtB,IAAAA,CAAC,EAAEf,SAAS,CAACoC,MAAV,CAAiBC;AAFS,GAAhB,CAPS;AAWxBZ,EAAAA,UAAU,EAAEzB,SAAS,CAACsC,IAAV,CAAeD;AAXH,CAA1B;AAcA,eAAepC,SAAS,CAACiB,OAAD,CAAT,CAAmBQ,aAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragLayer } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\n\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n};\n\nconst getItemStyles = currentOffset => {\n  if (!currentOffset) {\n    return {\n      display: 'none',\n    };\n  }\n  const { x, y } = currentOffset;\n  return {\n    transform: `translate(${x}px, ${y}px)`,\n    filter: 'drop-shadow(0 2px 12px rgba(0,0,0,0.45))',\n  };\n};\n\nconst collect = monitor => ({\n  item: monitor.getItem(),\n  itemType: monitor.getItemType(),\n  currentOffset: monitor.getSourceClientOffset(),\n  isDragging: monitor.isDragging(),\n});\n\nclass CardDragLayer extends React.Component {\n  renderItem(type, item) {\n    return null\n  }\n\n  render() {\n    const { item, itemType, currentOffset, isDragging } = this.props;\n\n    if (!isDragging) {\n      return null;\n    }\n\n    return (\n      <div style={layerStyles}>\n        <div style={getItemStyles(currentOffset)}>{this.renderItem(itemType, item)}</div>\n      </div>\n    );\n  }\n}\n\nCardDragLayer.propTypes = {\n  item: PropTypes.object,\n  itemType: PropTypes.string,\n  initialOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n  isDragging: PropTypes.bool.isRequired,\n};\n\nexport default DragLayer(collect)(CardDragLayer);\n"]},"metadata":{},"sourceType":"module"}