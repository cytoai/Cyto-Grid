{"ast":null,"code":"import _classCallCheck from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cfriedri/Documents/work/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cfriedri/Documents/work/my-app/src/Item.js\";\nimport React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    return {\n      listId: props.listId\n    };\n  },\n  endDrag: function endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    } // When dropped on a compatible target, do something\n\n\n    var item = monitor.getItem();\n    console.log(item);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Item =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Item, _Component);\n\n  function Item() {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          listId = _this$props.listId,\n          selected = _this$props.selected,\n          _onClick = _this$props.onClick,\n          connectDragSource = _this$props.connectDragSource;\n      return connectDragSource(React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _onClick(listId);\n        },\n        className: selected.includes(listId) ? \"selected\" : \"unselected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"foo\",\n        src: \"https://place-hold.it/256x256\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Item;\n}(Component);\n\nexport default DragSource(\"Item\", itemSource, collect)(Item);","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/my-app/src/Item.js"],"names":["React","Component","DragSource","itemSource","beginDrag","props","listId","endDrag","monitor","component","didDrop","item","getItem","console","log","collect","connect","connectDragSource","dragSource","isDragging","Item","state","selected","onClick","includes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACf,WAAO;AACLC,MAAAA,MAAM,EAAED,KAAK,CAACC;AADT,KAAP;AAGD,GALc;AAMfC,EAAAA,OANe,mBAMPF,KANO,EAMAG,OANA,EAMSC,SANT,EAMoB;AAC/B,QAAI,CAACD,OAAO,CAACE,OAAR,EAAL,EAAwB;AACtB;AACD,KAH8B,CAI/B;;;AACA,QAAMC,IAAI,GAAGH,OAAO,CAACI,OAAR,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;AAbY,CAAnB;;AAiBA,SAASI,OAAT,CAAiBC,OAAjB,EAA0BR,OAA1B,EAAmC;AAC/B,SAAO;AACHS,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADhB;AAEHC,IAAAA,UAAU,EAAEX,OAAO,CAACW,UAAR;AAFT,GAAP;AAIH;;IAGKC,I;;;;;AACF,kBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa,EAAb;AAFS;AAIZ;;;;6BAES;AAAA,wBACmD,KAAKhB,KADxD;AAAA,UACEC,MADF,eACEA,MADF;AAAA,UACUgB,QADV,eACUA,QADV;AAAA,UACoBC,QADpB,eACoBA,OADpB;AAAA,UAC6BN,iBAD7B,eAC6BA,iBAD7B;AAEN,aAAOA,iBAAiB,CACpB;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAMM,QAAO,CAACjB,MAAD,CAAb;AAAA,SAAd;AAAqC,QAAA,SAAS,EAAEgB,QAAQ,CAACE,QAAT,CAAkBlB,MAAlB,IAA4B,UAA5B,GAAyC,YAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,KAAT;AAAe,QAAA,GAAG,EAAC,+BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADoB,CAAxB;AAKH;;;;EAdcL,S;;AAiBnB,eAAeC,UAAU,CAAC,MAAD,EAASC,UAAT,EAAqBY,OAArB,CAAV,CAAwCK,IAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { DragSource } from 'react-dnd';\n\nconst itemSource = {\n    beginDrag(props) {\n      return {\n        listId: props.listId\n      };\n    },\n    endDrag(props, monitor, component) {\n        if (!monitor.didDrop()) {\n          return;\n        }\n        // When dropped on a compatible target, do something\n        const item = monitor.getItem();\n        console.log(item)\n      }\n};\n  \n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    };\n}\n\n\nclass Item extends Component {\n    constructor(){\n        super()\n        this.state = {\n        }\n    }\n\n    render () {\n        const { listId, selected, onClick, connectDragSource } = this.props\n        return connectDragSource(\n            <li  onClick={() => onClick(listId)} className={selected.includes(listId) ? \"selected\" : \"unselected\"}>\n                <img alt=\"foo\" src=\"https://place-hold.it/256x256\" />\n            </li>\n        )\n    }\n}\n\nexport default DragSource(\"Item\", itemSource, collect)(Item)\n"]},"metadata":{},"sourceType":"module"}