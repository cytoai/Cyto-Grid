{"ast":null,"code":"var _jsxFileName = \"/Users/cfriedri/Documents/work/windowing/src/Items.js\";\nimport React from 'react';\nimport Item from './Item';\nimport { FixedSizeGrid as Grid } from 'react-window';\n\nvar Items = function Items(props) {\n  var onmousedown = function onmousedown(listId) {\n    props.selectItem(listId);\n  };\n\n  var selectedItems = props.selectedItems;\n  var items = [];\n\n  var Cell = function Cell(_ref) {\n    var columnIndex = _ref.columnIndex,\n        rowIndex = _ref.rowIndex,\n        style = _ref.style;\n    return React.createElement(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Item \", rowIndex, \",\", 0);\n  };\n\n  for (var i = 0; i < 250; i = i + 1) {\n    items.push(React.createElement(Item, {\n      key: i,\n      listId: i,\n      selectedItems: selectedItems,\n      onmousedown: onmousedown,\n      mousePosition: props.mousePosition,\n      ondrag: props.ondrag,\n      somethingIsDragging: props.somethingIsDragging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columnCount: 1000,\n    columnWidth: 100,\n    height: 150,\n    rowCount: 1000,\n    rowHeight: 35,\n    width: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, Cell));\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/cfriedri/Documents/work/windowing/src/Items.js"],"names":["React","Item","FixedSizeGrid","Grid","Items","props","onmousedown","listId","selectItem","selectedItems","items","Cell","columnIndex","rowIndex","style","i","push","mousePosition","ondrag","somethingIsDragging"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,aAAa,IAAIC,IAA1B,QAAsC,cAAtC;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5BF,IAAAA,KAAK,CAACG,UAAN,CAAiBD,MAAjB;AACH,GAFD;;AADqB,MAKbE,aALa,GAKKJ,KALL,CAKbI,aALa;AAMrB,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,QAAGC,WAAH,QAAGA,WAAH;AAAA,QAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,QAA0BC,KAA1B,QAA0BA,KAA1B;AAAA,WACT;AAAK,MAAA,KAAK,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQD,QADR,OACmB,CADnB,CADS;AAAA,GAAb;;AAOA,OAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,GAAGA,CAAC,GAAC,CAA9B,EAAgC;AAC5BL,IAAAA,KAAK,CAACM,IAAN,CAAY,oBAAC,IAAD;AACI,MAAA,GAAG,EAAED,CADT;AAEI,MAAA,MAAM,EAAEA,CAFZ;AAGI,MAAA,aAAa,EAAEN,aAHnB;AAII,MAAA,WAAW,EAAEH,WAJjB;AAKI,MAAA,aAAa,EAAED,KAAK,CAACY,aALzB;AAMI,MAAA,MAAM,EAAEZ,KAAK,CAACa,MANlB;AAOI,MAAA,mBAAmB,EAAEb,KAAK,CAACc,mBAP/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AASH;;AACD,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACR,IAAA,WAAW,EAAE,IADL;AAER,IAAA,WAAW,EAAE,GAFL;AAGR,IAAA,MAAM,EAAE,GAHA;AAIR,IAAA,QAAQ,EAAE,IAJF;AAKR,IAAA,SAAS,EAAE,EALH;AAMR,IAAA,KAAK,EAAE,GANC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQPR,IARO,CADJ,CADJ;AAcH,CAxCD;;AA0CA,eAAeP,KAAf","sourcesContent":["import React from 'react'\nimport Item from './Item'\nimport { FixedSizeGrid as Grid } from 'react-window';\n\n\nconst Items = (props) => {\n    const onmousedown = (listId) => {\n        props.selectItem(listId)\n    }\n\n    const { selectedItems } = props\n    let items = []\n\n    const Cell = ({ columnIndex, rowIndex, style }) => (\n        <div style={style}>\n          Item {rowIndex},{0}\n        </div>\n      );\n       \n\n    for(let i = 0; i < 250; i = i+1){\n        items.push( <Item\n                        key={i} \n                        listId={i} \n                        selectedItems={selectedItems} \n                        onmousedown={onmousedown} \n                        mousePosition={props.mousePosition} \n                        ondrag={props.ondrag}\n                        somethingIsDragging={props.somethingIsDragging}\n                    />)\n    }\n    return (\n        <React.Fragment>\n            <Grid\n    columnCount={1000}\n    columnWidth={100}\n    height={150}\n    rowCount={1000}\n    rowHeight={35}\n    width={500}\n  >\n    {Cell}\n  </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default Items\n"]},"metadata":{},"sourceType":"module"}